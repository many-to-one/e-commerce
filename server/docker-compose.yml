# services:
#   db:
#     image: postgres:17
#     container_name: shop_db
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - PGPORT=${DB_PORT}
#     ports:
#       - "${DB_PORT}:${DB_PORT}"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     # networks:
#     #   - db-net
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#       interval: 5s
#       retries: 5
#       start_period: 1s
#       timeout: 10s

  # web:
  #  build: .
  #  container_name: shop_web
  #  ports:
  #    - "${DJANGO_PORT}:${DJANGO_PORT}"
  #  depends_on:
  #    - db
  #  command: python manage.py runserver 0.0.0.0:${DJANGO_PORT}
  #  environment:
  #    DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
  #    DEBUG: ${DEBUG}
  #   #  DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
  #    DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
  #   #  DATABASE_ENGINE: ${DATABASE_ENGINE}
  #    DATABASE_NAME: ${DB_NAME}
  #    DATABASE_USERNAME: ${DB_USER}
  #    DATABASE_PASSWORD: ${DB_PASSWORD}
  #    DATABASE_HOST: ${DB_PORT}
  #    DATABASE_PORT: ${DB_PORT}
  #  env_file:
  #    - .env

services:
  db:
    image: postgres:latest
    container_name: shopdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT}
      PGHOST: ${DB_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 5
      start_period: 1s
      timeout: 10s
  web:
    build: .
    container_name: eshopweb
    command: python manage.py runserver 0.0.0.0:${DJANGO_PORT}
    volumes:
      - .:/app
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    environment:
      POSTGRES_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
    env_file:
    - .env


  redis:
    image: redis:latest
    container_name: eshop_redis
    restart: always
    ports:
      - "6380:6379"


  celery:
    build: .
    container_name: backend_celery_worker
    command: celery -A backend worker --loglevel=info  # Celery worker command
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PGNAME=${DB_NAME}
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGPORT=${DB_PORT}
      - PGHOST=${DB_HOST}


  celery-beat:
    build: .
    container_name: backend_celery_beat
    command: celery -A backend beat --loglevel=info  # Celery beat command (optional)
    volumes:
      - .:/app
    depends_on:
      - web
      - redis


  master:
      image: locustio/locust:master
      ports:
       - "8089:8089"
      volumes:
        - ./locust:/mnt/locust
      command: -f /mnt/locust/locustfile.py --master -H http://master:8089
      # command: -f /mnt/locust/locustfile.py --master -H http://127.0.0.1:8100

  worker:
      image: locustio/locust:master
      volumes:
        - ./locust:/mnt/locust
      command: -f /mnt/locust/locustfile.py --worker --master-host master

volumes:
  postgres_data: {}